name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12, 3.13]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install ruff pytest pytest-cov build boto3 twine

      - name: Run Ruff linting
        run: ruff check .

      - name: Run tests and generate reports
        run: |
          pytest \
            --cov=. \
            --cov-report=xml:coverage.xml \
            --junitxml=pytest-report.xml

      - name: Upload pytest artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pytest-artifacts-${{ matrix.python-version }}
          path: |
            coverage.xml
            pytest-report.xml

      - name: Build wheel
        run: |
          python -m build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-files-${{ matrix.python-version }}
          path: dist/*.whl

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload .whl to S3
        run: |
          for file in dist/*.whl; do
            aws s3 cp "$file" "s3://${{ secrets.S3_BUCKET_NAME }}/$(basename $file)"
          done

      - name: Configure AWS CodeArtifact
        run: |
          export DOMAIN=${{ secrets.CODEARTIFACT_DOMAIN }}
          export DOMAIN_OWNER=${{ secrets.CODEARTIFACT_DOMAIN_OWNER }}
          export REPO=${{ secrets.CODEARTIFACT_REPO }}
          export REGION=${{ secrets.AWS_REGION }}
          export CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token \
            --domain $DOMAIN \
            --domain-owner $DOMAIN_OWNER \
            --query authorizationToken \
            --output text)
          pip config set global.index-url \
            https://aws:$CODEARTIFACT_AUTH_TOKEN@$DOMAIN-$DOMAIN_OWNER.d.codeartifact.$REGION.amazonaws.com/pypi/$REPO/simple/
          for file in dist/*.whl; do
            twine upload --repository-url \
              https://$DOMAIN-$DOMAIN_OWNER.d.codeartifact.$REGION.amazonaws.com/pypi/$REPO/ \
              -u aws \
              -p $CODEARTIFACT_AUTH_TOKEN \
              "$file"
          done